import random
import requests
from bs4 import BeautifulSoup

# ──────────────────────────────────────────────
# 멜론 TOP100 곡 수집 (제목 + 가수)
# ──────────────────────────────────────────────
def fetch_melon_top100():
    url = "https://www.melon.com/chart/index.htm"
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Referer": "https://www.melon.com/chart/index.htm",
    }
    try:
        resp = requests.get(url, headers=headers, timeout=10)
        resp.raise_for_status()
        soup = BeautifulSoup(resp.text, "html.parser")

        songs = []
        for tr in soup.select("tr.lst50, tr.lst100"):
            title_tag = tr.select_one("div.ellipsis.rank01 a")
            artist_tag = tr.select_one("div.ellipsis.rank02 a")
            if title_tag and artist_tag:
                songs.append(f"{title_tag.get_text(strip=True)} - {artist_tag.get_text(strip=True)}")
        return songs
    except Exception:
        return []

# ──────────────────────────────────────────────
# 1. 연애 심리 테스트
# ──────────────────────────────────────────────
def love_test():
    print("\n[연애 심리 테스트]")

    print("Q1. 데이트할 때 더 기대되는 것은?\n   a) 대화와 공감   b) 이벤트와 깜짝 선물")
    q1 = input("선택 (a/b): ").strip().lower()

    print("Q2. 썸을 탈 때 더 신경 쓰는 것은?\n   a) 상대의 말투   b) 외모와 스타일")
    q2 = input("선택 (a/b): ").strip().lower()

    print("Q3. 연애 초반, 당신의 행동은?\n   a) 천천히 알아가기   b) 감정 표현에 솔직하기")
    q3 = input("선택 (a/b): ").strip().lower()

    combo = q1 + q2 + q3
    results = {
        "aaa": ("따뜻한 공감형", "배려심이 많고 상대 이야기를 귀 기울여 들어주는 스타일이에요."),
        "aab": ("이성적 안정형", "차분하고 신중하게 관계를 깊게 만들어 가요."),
        "aba": ("섬세 감성형", "분위기·말투 같은 디테일에 큰 감동을 받는 낭만주의자예요."),
        "abb": ("열정 돌진형", "설렘과 순간의 감정을 솔직히 표현해요."),
        "baa": ("직진 표현형", "좋아하는 감정을 확실히 표현해 상대에게 안심을 줘요."),
        "bab": ("열정 돌진형", "적극적이고 스킨십·표현을 두려워하지 않는 타입이에요."),
        "bba": ("자유로운 탐색형", "틀에 얽매이기보다 서로를 탐색하며 관계를 만들어 가요."),
        "bbb": ("트렌디 표현형", "스타일·표현 모두 센스 있게 소화하는 매력 만점 타입이에요.")
    }
    style, desc = results.get(combo, ("독특한 개성형", "당신만의 특별한 연애 스타일이 있군요!"))

    print(f"\n당신은 💖 {style} 💖 연애 스타일입니다!")
    print(f"→ {desc}")

# ──────────────────────────────────────────────
# 2. 이름 궁합 테스트
# ──────────────────────────────────────────────
def name_love_match():
    print("\n[이름 궁합 테스트]")
    me = input("당신의 이름: ").strip()
    other = input("상대방 이름: ").strip()
    percent = random.randint(60, 100)
    comment = random.choice([
        "두 분은 환상의 케미를 자랑해요!",
        "티격태격해도 결국엔 서로에게 끌릴 운명이에요!",
        "서로가 가진 다른 매력으로 조화를 이룹니다!",
        "조금 다른 만큼 더 특별한 궁합이에요!"
    ])
    print(f"\n❤️ {me} ♡ {other} 의 궁합률은 {percent}% 입니다!")
    print("사랑의 방향은:", comment)

# ──────────────────────────────────────────────
# 3. 연애 고민 상담
# ──────────────────────────────────────────────
def love_advice():
    print("\n[연애 고민 상담]")
    worries = [
        "1. 썸 타는 사람과 연락이 줄었어요",
        "2. 헤어진 연인이 자꾸 생각나요",
        "3. 짝사랑 중인데 고백할까 고민이에요",
        "4. 연인이 너무 무뚝뚝해요",
        "5. 장거리 연애가 힘들어요",
        "6. 상대가 나에게 관심이 있는지 모르겠어요",
        "7. 연인과 자주 다퉈요"
    ]
    for w in worries:
        print(w)

    advices = {
        1: [
            "서로 바쁜 시기일 수 있으니 시간을 두고 지켜봐요.",
            "가벼운 안부 인사로 먼저 다가가 보는 건 어때요?",
            "솔직하게 속마음을 전해보는 것도 방법입니다."
        ],
        2: [
            "그리움을 억지로 참지 말고 자연스럽게 흘려보세요.",
            "새로운 취미로 마음을 채워보면 도움이 돼요.",
            "시간이 지나면 추억도 아름답게 남을 거예요."
        ],
        3: [
            "고백은 진심이 전부입니다. 타이밍보다 진심을 담아보세요.",
            "상대의 마음을 조금 더 관찰한 뒤 용기를 내도 늦지 않아요.",
            "친구에게 리허설(?)을 해보는 것도 좋은 준비가 돼요."
        ],
        4: [
            "표현 방식 차이를 인정하고 대화를 시도해 보세요.",
            "작은 스킨십이나 칭찬으로 분위기를 부드럽게 만들 수 있어요.",
            "연인에게 원하는 표현을 구체적으로 알려주는 것도 방법입니다."
        ],
        5: [
            "규칙적인 연락 루틴을 만들어 보는 건 어때요?",
            "만날 때마다 서로에게 집중하며 추억을 쌓아보세요.",
            "함께 할 미래 계획을 세우면 심리적으로 더 가까워져요."
        ],
        6: [
            "관심은 행동으로 드러납니다. 작은 배려를 관찰해 보세요.",
            "공통 관심사를 찾아 대화를 늘려보세요.",
            "직접적이지 않은 가벼운 질문으로 마음을 확인해 보세요."
        ],
        7: [
            "다투기 전 '왜' 화가 났는지부터 차분히 이야기해 보세요.",
            "서로의 감정을 존중하며 잠깐의 휴식 시간을 두는 것도 좋아요.",
            "다툼 뒤에는 반드시 화해의 시간을 만드는 습관을 가져보세요."
        ]
    }

    while True:
        try:
            num = input("고민 번호 선택 (종료하려면 q 입력): ").strip()
            if num.lower() == 'q':
                print("상담 종료합니다.")
                break
            num = int(num)
            if num in advices:
                print("💡 조언:", random.choice(advices[num]))
            else:
                print("잘못된 번호예요. 1~7 사이를 입력하세요.")
        except ValueError:
            print("숫자 1~7 또는 'q'를 입력해 주세요.")

# ──────────────────────────────────────────────
# 4. 연애 명언 + 마음을 담은 짝사랑·이별 노래 추천
# ──────────────────────────────────────────────
def love_quote_with_song():
    print("\n[연애 명언 + 마음을 담은 짝사랑·이별 노래 추천]")
    quotes = [
        ("사랑은 계산이 아닌 느낌으로 하는 것.", "알랭 드 보통"),
        ("진심은 언젠가 반드시 전해진다.", "헬렌 켈러"),
        ("사랑은 서로를 바라보는 것이 아니라 같은 방향을 보는 것이다.", "생텍쥐페리"),
        ("좋아하는 마음이 가장 큰 용기다.", "프리드리히 니체"),
        ("마음이 통하면 말이 필요 없다.", "파울로 코엘료")
    ]
    songs = [
        "아이유 - 밤편지",
        "버스커 버스커 - 꽃송이가",
        "폴킴 - 모든 날, 모든 순간",
        "백예린 - 그건 아마 우리의 잘못은 아닐 거야",
        "태연 - 11:11",
        "임창정 - 소주 한 잔",
        "헤이즈 - 널 너무 모르고",
        "이하이 - 한숨"
    ]
    quote, author = random.choice(quotes)
    song = random.choice(songs)

    print(f"💬 명언: \"{quote}\" - {author}")
    print(f"🎶 노래: {song}")

# ──────────────────────────────────────────────
# 5. 오늘의 연애 운세와 행운의 노래 한 곡, 행운의 아이템
# ──────────────────────────────────────────────
def today_love_fortune():
    fortunes = [
        "오늘은 상대방의 마음을 더 잘 이해할 수 있는 날이에요!",
        "기대하지 않은 곳에서 좋은 인연을 만날 수 있어요.",
        "솔직한 마음이 오해를 풀고 관계를 깊게 만들 거예요.",
        "작은 배려가 큰 사랑으로 돌아오는 행운이 있어요.",
        "긍정적인 마인드가 좋은 결과를 부를 거예요."
    ]
    songs = [
        "아이유 - 좋은 날",
        "폴킴 - 모든 날, 모든 순간",
        "백현 - 캔디",
        "볼빨간사춘기 - 우주를 줄게",
        "태연 - 만약에",
    ]
    items = [
        "하트 모양 목걸이",
        "핑크빛 꽃다발",
        "행운의 토끼 인형",
        "반짝이는 반지",
        "귀여운 손거울"
    ]

    fortune = random.choice(fortunes)
    song = random.choice(songs)
    item = random.choice(items)

    print("\n[오늘의 연애 운세와 행운 아이템 추천]")
    print(f"💖 연애 운세: {fortune}")
    print(f"🎵 행운의 노래: {song}")
    print(f"🍀 행운의 아이템: {item}")

# ──────────────────────────────────────────────
# 메인 메뉴 및 프로그램 실행
# ──────────────────────────────────────────────
def main():
    print("\n💘 러브 카운터 💘")
    while True:
        print("\n1. 내 마음 속 연애 심리 테스트")
        print("2. 이름으로 보는 러브 궁합")
        print("3. 연애 고민 속 시원한 상담")
        print("4. 사랑이 담긴 명언과 짝사랑·이별 노래")
        print("5. 오늘의 러브 운세와 행운 노래, 아이템 추천")
        print("6. 종료")

        choice = input("원하는 번호를 선택해 주세요: ").strip()

        if choice == "1":
            love_test()
        elif choice == "2":
            name_love_match()
        elif choice == "3":
            love_advice()
        elif choice == "4":
            love_quote_with_song()
        elif choice == "5":
            today_love_fortune()
        elif choice == "6":
            print("프로그램을 종료합니다. 당신의 사랑을 응원해요!")
            break
        else:
            print("잘못된 입력입니다. 1~6 사이 번호를 입력해 주세요.")

if __name__ == "__main__":
    main()

